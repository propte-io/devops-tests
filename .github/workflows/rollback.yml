name: Rollback Workflow

on:
  workflow_dispatch:
    inputs:
      STAGE:
        description: 'Environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - prod
        - staging
        - dev
      APPS:
        description: 'App (all apps should be deployed by default)'
        type: choice
        default: 'all'
        options:
        - all
        - landonline-ui
        - platform
      FROM_TAG:
        description: 'From tag'
        required: true
      TO_TAG:
        description: 'To tag'
        required: true

jobs:
  roll-back:
    environment: ${{ inputs.STAGE }}
    name: Rollback
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Code Fetch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Cache Fetch
        uses: actions/cache@v3
        with:
          path: |
            '**/node_modules'
            .netlify/cache
          key: ${{ runner.os }}-modules-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install modules
        run: yarn install

      - name: Migration
        if: contains('platform, all', inputs.APPS)
        run: |
          version() { echo "$@" | awk -F. '{ printf("%d%03d%03d%03d\n", $1,$2,$3,$4); }'; }

          if [ $(version "${{ inputs.FROM_TAG }}") -ge $(version "${{ inputs.TO_TAG }}") ]; then
            VERSIONS=`git tag -l | awk -v FROM_TAG=${{ inputs.FROM_TAG }} -v TO_TAG=${{ inputs.TO_TAG }} 'version $0 <= version FROM_TAG && version $0 > version TO_TAG {print$1}' | awk '{a[i++]=$0} END {for (j=i-1; j>=0;) print a[j--] }'`
            ROLLBACK_DIRECTION=down
          else
            VERSIONS=`git tag -l | awk -v FROM_TAG=${{ inputs.FROM_TAG }} -v TO_TAG=${{ inputs.TO_TAG }} 'version $0 > version FROM_TAG && version $0 <= version TO_TAG {print$1}'`
            ROLLBACK_DIRECTION=up
          fi

          for CURRENT_TAG in $VERSIONS
          do
            if [[ "${{ inputs.STAGE }}" == "dev" ]]; then
              git checkout main
            else
              git checkout ${{ inputs.STAGE }}
            fi

            ROLLBACK_DIRECTION=$ROLLBACK_DIRECTION CURRENT_TAG=$CURRENT_TAG STAGE=$STAGE bash ops/migrate.sh
          done
        env:
          STAGE: ${{ inputs.STAGE }}
